on:
  workflow_call:
    inputs:
      bumpversion-cfg-path:
        required: false
        type: string
        default: .bumpversion.cfg
      gitversion-config-path: 
        required: false
        type: string
        default: GitVersion.yml
      use-pip-semver:
        required: false
        type: boolean
        default: true
    outputs:
      ## SemVer Tag - Cleaned up so that NuGet can correctly consume it
      NuGetSemVerTag: ${{ jobs.clean-up-version-stamp.outputs.NuGetSemVerTag }}
      ## SemVer Tag - Cleaned up so that PIP can correctly consume it 
      PIPSemVerTag: ${{ jobs.clean-up-version-stamp.outputs.PIPSemVerTag }}
      ## Semver Tag - Cleaned up so that Docker can correctly consume it
      DockerSemVerTag: ${{ jobs.clean-up-version-stamp.outputs.DockerSemVerTag }}
      ## Commits in the Branch - Useful to name other things
      CommitsInBranch: ${{ jobs.calculate-new-version.outputs.Commits }}
      ## Name of the Branch - Useful to name other things
      BranchName: ${{ jobs.calculate-new-version.outputs.BranchName }}

jobs:
  calculate-new-version:
    name: Calculate New Version Stamp using GitVersion
    runs-on: ubuntu-latest

    outputs:
      NuGetSemVerTag: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      MajMinPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      Commits: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
      BranchName: ${{ steps.gitversion.outputs.BranchName }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 ## Fetch-depth 0 is needed for GitVersion
      - name: Install Gitversion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name:
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true
          configFilePath: ${{ inputs.gitversion-config-path }}

  clean-up-version-stamp:
    needs: [calculate-new-version]
    outputs:
      NuGetSemVerTag: ${{ steps.clean-semver.outputs.new_version_nuget }}
      PIPSemVerTag: ${{ steps.clean-semver.outputs.new_version_pip }}
      DockerSemVerTag: ${{ steps.clean-semver.outputs.new_version_docker }}
    steps:
      - uses: actions/checkout@v2
      - uses: jwalton/gh-find-current-pr@v1
        id: find-pr
        with:
          state: open 

      - name: Clean SemVer Tags for different needs
        id: clean-semver 
        run: |
          if [[ "${{ needs.calculate-new-version.outputs.BranchName }}" == "main" ]]; then
            echo "::set-output name=new_version_pip::${{ needs.calculate-new-version.outputs.MajMinPatch }}"
            echo "::set-output name=new_version_docker::${{ needs.calculate-new-version.outputs.MajMinPatch }}"
          else
            echo "::set-output name=new_version_pip::${{ needs.calculate-new-version.outputs.MajMinPatch }}a${{ steps.find-pr.outputs.pr }}+${{ needs.calculate-new-version.outputs.Commits }}"
            echo "::set-output name=new_version_docker::${{ needs.calculate-new-version.outputs.MajMinPatch }}-a.${{ steps.find-pr.outputs.pr }}-${{ needs.calculate-new-version.outputs.Commits }}"
          fi
          echo "::set-output name=new_version_nuget::${{ needs.calculate-new-version.outputs.NuGetSemVerTag }}"

  bump-version:
    name: Run Bump2Version
    runs-on: ubuntu-latest
    needs: [clean-up-version-stamp]

    steps:
      - uses: actions/checkout@v2
      - name: Get Tag to use for Bump2Version
        id: get-b2v-tag
        run: |
          if [[ "${{ inputs.use-pip-semver }}" ]]; then
            echo "::set-ouput name=bump_2_version_semver::${{ needs.clean-up-version-stamp.PIPSemVerTag }}"
          else ## Use Nuget Version instead
            echo "::set-ouput name=bump_2_version_semver::${{ needs.clean-up-version-stamp.NuGetSemVerTag }}"
          fi

      - name: Install Bump2Version & Execute Bump Version
        run: |
          echo "Bump2Version ${{ steps.get-b2v-tag.outputs.bump_2_version_semver }}"
          git config --global user.email "services@modl.ai"
          git config --global user.name "marvin-modl"
          python3 -m pip install bump2version
          bump2version --new-version ${{ steps.get-b2v-tag.outputs.bump_2_version_semver }} all --config-file ${{ inputs.bumpversion-cfg-path }}

      - name: Commit Changed Files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Version Bumped to ${{ steps.id-clean.outputs.new_version }}
